<?xml version="1.0" encoding="utf-8"?>
<CodeSnippets xmlns="http://schemas.microsoft.com/VisualStudio/2005/CodeSnippet">
  <CodeSnippet Format="1.0.0">
    <Header>
      <SnippetTypes>
        <SnippetType>Expansion</SnippetType>
      </SnippetTypes>
      <Title>Validator - Missing SiteGuid</Title>
      <Author>
      </Author>
      <Description>
      </Description>
      <HelpUrl>
      </HelpUrl>
      <Shortcut>ValidatorMissingSiteGuid</Shortcut>
    </Header>
    <Snippet>
      <Declarations>
        <Literal Editable="true">
          <ID>Model</ID>
          <ToolTip>
          </ToolTip>
          <Default>Model</Default>
          <Function>
          </Function>
        </Literal>
      </Declarations>
      <Code Language="csharp" Delimiter="$"><![CDATA[            [Fact]
            public void MissingSiteGuid_ReturnsEmptyString() {
                // arrange
                var validator = MakeValidator();
                $Model$
                var expected = 1;

                // act
                var results = validator.Validate(model);

                // assert
                results.Count
                       .Should()
                       .Be(expected);
            }

            [Fact]
            public void MissingSiteGuid_ReturnsExpectedFieldName() {
                // arrange
                var validator = MakeValidator();
                $Model$
                var expected = "SiteGuid";

                // act
                var results = validator.Validate(model);

                // assert
                results[0].FieldName
                          .Should()
                          .Be(expected);
            }

            [Fact]
            public void MissingSiteGuid_ReturnsExpectedMessage() {
                // arrange
                var validator = MakeValidator();
                $Model$
                var expected = "SiteGuid is required";

                // act
                var results = validator.Validate(model);

                // assert
                results[0].Message
                          .Should()
                          .Be(expected);
            }]]></Code>
    </Snippet>
  </CodeSnippet>
</CodeSnippets>